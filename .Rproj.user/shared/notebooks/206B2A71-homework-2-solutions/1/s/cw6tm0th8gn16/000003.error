{"frames":[{"func":"linear_reg() %>% set_engine(\"lm\") %>% add_recipe(abalone_recipe)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"add_recipe(., abalone_recipe)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"add_action(x, action, \"recipe\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(\"`x` must be a workflow.\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: `x` must be a workflow.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n"}